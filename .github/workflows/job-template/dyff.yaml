dyff:
  name: Run dyff
  runs-on: ubuntu-latest
  needs: comvent
  if: always() && (
    needs.comvent.outputs.run-dyff != '')

  # == export: steps / begin ==
  steps:
    - name: Get PR ref from comment
      uses: actions/github-script@v4
      with:
        script: |
          const prNum = context.payload.issue.number
          const {data} = await github.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: prNum,
          })

          core.exportVariable('pr_head_ref', data.head.ref);

    - uses: actions/checkout@v2
      with:
        ref: ${{ env.pr_head_ref }}
        fetch-depth: 0
        token: ${{ secrets.AUTOMATION_PAT }}

    - name: Install dyff
      run: brew install homeport/tap/dyff

    - name: Find Helm and Kustomize related changes
      run: |
        # Check Kustomize based files
        # !! NOTE !! : This setup assumes a lot about the directory structure.
        #              Also, if multiple directories are changed at once, this
        #              setup will break.
        kustomize_diff=$(git diff-index --name-only origin/main | grep -v .github | grep kustomize | awk -F "/" '{printf "%s/%s\n", $1, $2}' | uniq || echo "")
        if [[ "$kustomize_diff" != "" ]]; then
          echo "kustomize_diff=$kustomize_diff" >> $GITHUB_ENV
        fi

        # Check Helm based files
        # !! NOTE !! : This setup assumes a lot about the directory structure.
        #              Also, if multiple directories are changed at once, this
        #              setup will break.
        helm_diff=$(git diff-index --name-only origin/main | grep -v .github | grep helm | awk -F "/" '{printf "%s/%s\n", $1, $2}' | uniq || echo "")
        if [[ "$helm_diff" != "" ]]; then
          echo "helm_diff=$helm_diff" >> $GITHUB_ENV
          exit 0
        fi

    - if: env.kustomize_diff != ''
      id: dyff-kustomize
      name: Run dyff for Kustomize between before and after
      run: |
        tmpdir=$(mktemp -d)
        mkdir -p $tmpdir/kustomize_build/prod
        mkdir -p $tmpdir/kustomize_build/staging
        mkdir $tmpdir/kustomize_diff

        for file in "${{ env.kustomize_diff }}"; do
          filename=$(echo $file | tr '/' '-')

          # First, get existing setup in 'main' branch
          git switch main
          kustomize build $file/overlays/prod > $tmpdir/kustomize_build/prod/$filename-before.yaml
          kustomize build $file/overlays/staging > $tmpdir/kustomize_build/staging/$filename-before.yaml

          # Next, get the new file from PR
          git switch ${{ env.pr_head_ref }}
          kustomize build $file/overlays/prod > $tmpdir/kustomize_build/prod/$filename-after.yaml
          kustomize build $file/overlays/staging > $tmpdir/kustomize_build/staging/$filename-after.yaml

          # Finally, run dyff against before and after files, and when diff is found, set variable to target file
          cd $tmpdir || { echo "ERROR: cd failed"; exit 2; }
          dyff between -s \
            kustomize_build/prod/$filename-before.yaml \
            kustomize_build/prod/$filename-after.yaml \
            > kustomize_diff/$filename-diff-prod.txt \
            || echo "dyff_kustomize=$tmpdir/kustomize_diff" >> $GITHUB_ENV
          dyff between -s \
            kustomize_build/staging/$filename-before.yaml \
            kustomize_build/staging/$filename-after.yaml \
            > kustomize_diff/$filename-diff-staging.txt \
            || echo "dyff_kustomize=$tmpdir/kustomize_diff" >> $GITHUB_ENV
        done

    - if: env.helm_diff != ''
      id: dyff-helm
      name: Run dyff for Helm between before and after
      run: |
        tmpdir=$(mktemp -d)
        mkdir -p $tmpdir/helm_template/prod
        mkdir -p $tmpdir/helm_template/staging
        mkdir $tmpdir/helm_diff

        for file in "${{ env.helm_diff }}"; do
          filename=$(echo $file | tr '/' '-')

          # First, get existing setup in 'main' branch
          git switch main
          helm template $file -f $file/values-prod.yaml > $tmpdir/helm_template/prod/$filename-before.yaml
          helm template $file -f $file/values-staging.yaml > $tmpdir/helm_template/staging/$filename-before.yaml

          # Next, get the new file from PR
          git switch ${{ env.pr_head_ref }}
          helm template $file -f $file/values-prod.yaml > $tmpdir/helm_template/prod/$filename-after.yaml
          helm template $file -f $file/values-staging.yaml > $tmpdir/helm_template/staging/$filename-after.yaml

          # Finally, run dyff against before and after files, and when diff is found, set variable to target file
          cd $tmpdir || { echo "ERROR: cd failed"; exit 2; }
          dyff between -s \
            helm_template/prod/$filename-before.yaml \
            helm_template/prod/$filename-after.yaml \
            > helm_diff/$filename-diff-prod.txt \
            || echo "dyff_helm=$tmpdir/helm_diff" >> $GITHUB_ENV
          dyff between -s \
            helm_template/staging/$filename-before.yaml \
            helm_template/staging/$filename-after.yaml \
            > helm_diff/$filename-diff-staging.txt \
            || echo "dyff_helm=$tmpdir/helm_diff" >> $GITHUB_ENV
        done

    - if: env.kustomize_diff != ''
      name: Write comment with dyff result for Kustomize
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs').promises
          let bodies = []

          const filesKustomize = await fs.readdir('${{ env.dyff_kustomize }}')
          if (filesKustomize.length !== 0) bodies.push('### Kustomize Diff\n\n')
          for (const file of filesKustomize) {
            const comment = await fs.readFile('${{ env.dyff_kustomize }}/' + file, 'utf8')

            const singleBody = `

            Diff based on the updated file of \`${{ env.kustomize_diff }}\`

            \`\`\`
            ${comment}
            \`\`\`

            `

            bodies.push(singleBody)
          }

          const bodyData = "".concat(...bodies)
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: bodyData
          })
    - if: env.helm_diff != ''
      name: Write comment with dyff result for Helm
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs').promises
          let bodies = []

          const filesHelm = await fs.readdir('${{ env.dyff_helm }}')
          if (filesHelm.length !== 0) bodies.push('### Helm Diff\n\n')
          for (const file of filesHelm) {
            const comment = await fs.readFile('${{ env.dyff_helm }}/' + file, 'utf8')

            const singleBody = `

            Diff based on the updated file of \`${{ env.helm_diff }}\`

            \`\`\`
            ${comment}
            \`\`\`

            `

            bodies.push(singleBody)
          }

          const bodyData = "".concat(...bodies)
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: bodyData
          })
  # == export: steps / end ==
